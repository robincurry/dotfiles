NO_COLOR='\e[0m' # disable any colors

BLACK='\e[0;30m' # Black - Regular
RED='\e[0;31m' # Red
GREEN='\e[0;32m' # Green
YELLOW='\e[0;33m' # Yellow
BLUE='\e[0;34m' # Blue
PURPLE='\e[0;35m' # Purple
CYAN='\e[0;36m' # Cyan
WHITE='\e[0;37m' # White
EBLACK='\e[1;30m' # Black - Bold
ERED='\e[1;31m' # Red
EGREEN='\e[1;32m' # Green
EYELLOW='\e[1;33m' # Yellow
EBLUE='\e[1;34m' # Blue
EPURPLE='\e[1;35m' # Purple
ECYAN='\e[1;36m' # Cyan
EWHITE='\e[1;37m' # White
UNDBLK='\e[4;30m' # Black - Underline
UNDRED='\e[4;31m' # Red
UNDGRN='\e[4;32m' # Green
UNDYLW='\e[4;33m' # Yellow
UNDBLU='\e[4;34m' # Blue
UNDPUR='\e[4;35m' # Purple
UNDCYN='\e[4;36m' # Cyan
UNDWHT='\e[4;37m' # White
BAKBLK='\e[40m'   # Black - Background
BAKRED='\e[41m'   # Red
BAKGRN='\e[42m'   # Green
BAKYLW='\e[43m'   # Yellow
BAKBLU='\e[44m'   # Blue
BAKPUR='\e[45m'   # Purple
BAKCYN='\e[46m'   # Cyan
BAKWHT='\e[47m'   # White
TXTRST='\e[0m'    # Text Reset

function parse_git_branch {
  ref=$(git-symbolic-ref HEAD 2> /dev/null) || return
  echo "("${ref#refs/heads/}")" 
}

function parse_git_branch_no_worky {
  git rev-parse --git-dir &> /dev/null
  git_status="$(git status 2> /dev/null)"
  git_log_oneline="$(git log --pretty=oneline origin/master..master 2> /dev/null | wc -l)"
  branch_pattern="^# On branch ([^${IFS}]*)"
  remote_pattern="# Your branch is (.*) of"
  diverge_pattern="# Your branch and (.*) have diverged"
  if [[ ! ${git_status}} =~ "working directory clean" ]]; then
state="${RED}C"
  fi
  if [[ ! ${git_log_oneline}} =~ " 0" ]]; then
needs_push="${GREEN}P"
  fi
  # add an else if or two here if you want to get more specific
  if [[ ${git_status} =~ ${remote_pattern} ]]; then
if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
remote="${YELLOW}↑"
    else
remote="${YELLOW}↓"
    fi
fi
if [[ ${git_status} =~ ${diverge_pattern} ]]; then
remote="${YELLOW}↕"
fi
if [[ ${git_status} =~ ${branch_pattern} ]]; then
branch=${BASH_REMATCH[1]}
    echo "(${branch}) ${remote}${state}${needs_push}"
  fi
}

# PS1="\w $ "
PS1="\n\u:\[$EWHITE\]\w \[$YELLOW\]\$(parse_git_branch) \[$NO_COLOR\] \n→ "
# PS1="\n\u:\[$EWHITE\]\w $(parse_git_branch) \[$NO_COLOR\] \n→ "